#!/usr/bin/env node
const { WebClient } = require("@slack/web-api");
const { toSlackMsgBlocks } = require("@taptap/tds-tool-kit/cjs/utils/slack");
const axios = require("axios");
const slackClient = new WebClient(process.env.SLACK_TOKEN);
const mergeRequestIId = process.env.CI_MERGE_REQUEST_IID;
const projectId = process.env.CI_MERGE_REQUEST_PROJECT_ID;
const targetUrl = process.env.TARGET_URL;
const mergeRequestTitle = process.env.CI_MERGE_REQUEST_TITLE;
const slackBotToken = process.env.SLACK_BOT_TOKEN;

const config = {
  headers: {
    "PRIVATE-TOKEN": slackBotToken,
  },
};
const getTargetMergeRequestDescription = async () => {
  const url = `https://git.gametaptap.com/api/v4/projects/${projectId}/merge_requests/${mergeRequestIId}`;
  console.log("url:", url);
  const res = await axios.get(url, config);
  console.log("data:", res.data);
  const { description, author } = res.data;
  const allAvaList = [
    // 默认通知
    {
      channel: "tapsdk-doc-ci-status",
    },
  ];
  if (description) {
    for (const data of description.split("\n")) {
      const matched = data.match(/slack\("(.*?)","(.*?)"\)/);
      if (matched) {
        allAvaList.push({
          channel: matched[1],
        });
      }
    }
  }
  return allAvaList;
};
const getTargetSlackInfo = async () => {
  const url = `https://git.gametaptap.com/api/v4/projects/${projectId}/merge_requests/${mergeRequestIId}/notes`;
  console.log("url:", url);
  const res = await axios.get(url, config);
  const datas = res.data;
  const allAvaList = [];
  for (const data of datas) {
    const { body, author } = data;
    if (body) {
      const matched = body.match(/slack\("(.*?)","(.*?)"\)/);
      if (matched) {
        allAvaList.push({
          channel: matched[1],
        });
      }
    }
  }
  return allAvaList;
};
(async () => {
  if (!mergeRequestIId) {
    // 没有 request id 的直接推出即可
    process.exit(0);
  }
  const mainList = await getTargetMergeRequestDescription();
  const allAvaList = await getTargetSlackInfo();
  const targetUrlIntl = targetUrl.replace("tapsdk-doc-cn", "tapsdk-doc-intl");
  let markdown = `
 ${
   process.env.BUILD_LOCATION === "cn"
     ? `# 最新 国内 url : [点击这里](${targetUrl})`
     : ""
 }
 ${
   process.env.BUILD_LOCATION === "intl"
     ? `# 最新 海外 url : [点击这里](${targetUrlIntl})`
     : ""
 }
+ mr 标题: [${mergeRequestTitle}](https://git.gametaptap.com/web-frontend/tapsdk-doc/-/merge_requests/${mergeRequestIId})
+ 启动时间戳: ${process.env.CI_PIPELINE_CREATED_AT}
+ 唯一标识: ${process.env.DIST_HASH}
`;
  console.log("markdown：", markdown);
  console.log("当前历史提交：", process.env.LAST_COMMIT);
  if (process.env.LAST_COMMIT) {
    markdown += `

*最近 3 条修改记录*

${process.env.LAST_COMMIT} 
`;
  }
  const markdownBlocks = toSlackMsgBlocks(markdown);
  console.log(markdownBlocks);
  for (const { channel } of allAvaList.concat(mainList)) {
    console.log(channel);
    if (channel) {
      const result = await slackClient.chat.postMessage({
        blocks: markdownBlocks,
        channel: channel,
      });
      console.log("【Response】", JSON.stringify(result));
      if (!result.ok) {
        console.error("Slack 推送错误");
      }
    }
  }
})().catch((e) => {
  console.error(e);
  process.exit(2);
});
